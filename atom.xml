<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RH</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-14T08:35:13.745Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>RH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Gson出现转译字符</title>
    <link href="http://example.com/2021/03/30/%E4%BD%BF%E7%94%A8Gson%E5%87%BA%E7%8E%B0%E8%BD%AC%E8%AF%91%E5%AD%97%E7%AC%A6/"/>
    <id>http://example.com/2021/03/30/使用Gson出现转译字符/</id>
    <published>2021-03-30T05:10:05.000Z</published>
    <updated>2021-04-14T08:35:13.745Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-出现转译字符"><a href="#1-出现转译字符" class="headerlink" title="1.出现转译字符"></a>1.出现转译字符</h4><pre><code>String s = new Gson().toJson(encodedText);出现转译字符原因：Gson会把html标签，转换为Unicode转义字符。正确的使用方法是:Gson gson = new GsonBuilder().disableHtmlEscaping().create();</code></pre><h6 id="注意：用AES加密后的字符串转义后会变"><a href="#注意：用AES加密后的字符串转义后会变" class="headerlink" title="注意：用AES加密后的字符串转义后会变"></a>注意：用AES加密后的字符串转义后会变</h6><h4 id="2-pache工具包common-lang进行html-xml-java等的转义与反转义"><a href="#2-pache工具包common-lang进行html-xml-java等的转义与反转义" class="headerlink" title="2.pache工具包common-lang进行html,xml,java等的转义与反转义"></a>2.pache工具包common-lang进行html,xml,java等的转义与反转义</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String str1 = StringEscapeUtils.unescapeJava(str);</span><br><span class="line">原始 str = &#123;\&quot;name\&quot;:\&quot;spy\&quot;,\&quot;id\&quot;:\&quot;123456\&quot;&#125;</span><br><span class="line">目标 str1 = &#123;&quot;name&quot;:&quot;spy&quot;,&quot;id&quot;:&quot;123456&quot;&#125;</span><br></pre></td></tr></table></figure><p>下载地址：<a href="https://commons.apache.org/proper/commons-lang/download_lang.cgi" target="_blank" rel="noopener">https://commons.apache.org/proper/commons-lang/download_lang.cgi</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-出现转译字符&quot;&gt;&lt;a href=&quot;#1-出现转译字符&quot; class=&quot;headerlink&quot; title=&quot;1.出现转译字符&quot;&gt;&lt;/a&gt;1.出现转译字符&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;String s = new Gson().toJson(encodedTe
      
    
    </summary>
    
    
      <category term="json" scheme="http://example.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>博客发布后自定义域名失效</title>
    <link href="http://example.com/2021/03/29/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83%E5%90%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/"/>
    <id>http://example.com/2021/03/29/博客发布后自定义域名失效/</id>
    <published>2021-03-29T03:19:01.000Z</published>
    <updated>2021-03-29T03:20:03.906Z</updated>
    
    <content type="html"><![CDATA[<p>1.博客发布后自定义域名失效<br><a href="https://blog.csdn.net/xs20691718/article/details/81873921" target="_blank" rel="noopener">https://blog.csdn.net/xs20691718/article/details/81873921</a></p><p>2.title标题中，冒号后面不能接空格，否则会报错</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.博客发布后自定义域名失效&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/xs20691718/article/details/81873921&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.ne
      
    
    </summary>
    
      <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Replugin插件化</title>
    <link href="http://example.com/2021/03/24/Replugin%E6%8F%92%E4%BB%B6%E5%8C%96/"/>
    <id>http://example.com/2021/03/24/Replugin插件化/</id>
    <published>2021-03-24T03:37:00.000Z</published>
    <updated>2021-03-30T10:28:51.949Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-概念及技术分析"><a href="#1-概念及技术分析" class="headerlink" title="1.概念及技术分析"></a>1.概念及技术分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Atlas:功能强大，完善。学习成本，接入成本比较高，适合门户型大型应用。</span><br><span class="line"></span><br><span class="line">Replugin：轻量级可快速使用的插件化框架，适合中小型应用。</span><br><span class="line">优点：API接近原生应用，只有一个hook点，兼容性好，不需要随着Android系统的升级进行后续的兼容。</span><br></pre></td></tr></table></figure><h3 id="2-学习总结"><a href="#2-学习总结" class="headerlink" title="2.学习总结"></a>2.学习总结</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1.getMergeAssetTask()不到</span><br><span class="line">解决： android-gradle-plugin:3.5.3</span><br><span class="line">       replugin-host-gradle:2.3.3</span><br><span class="line"></span><br><span class="line">2.插件生成步骤:</span><br><span class="line">          1.正确配置repluginPluginConfig&#123;&#125;</span><br><span class="line">          2.Activity的正确继承</span><br><span class="line">          3../gradlew :rh_login:assembleDebug</span><br><span class="line">          4.改名为rh_login.jar</span><br><span class="line">          5.放到宿主工程中正确的位置</span><br><span class="line"></span><br><span class="line">3.宿主跳转插件activity</span><br><span class="line">      Intent intent = RePlugin.createIntent(&quot;rh_login&quot;,&quot;com.example.LoginActivity&quot;);</span><br><span class="line">      intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">      RePlugin.startActivity(this,intent);</span><br><span class="line"></span><br><span class="line">4.插件化开发广播发送和接收：与普通app开发完全一样，唯一要注意的是数据的传递</span><br><span class="line"></span><br><span class="line">5.插件间AIDL接口通讯：</span><br><span class="line">             1.AIDL接口中本身注意的一些事项</span><br><span class="line">             2.AIDL接口实现在对应的插件application中注册</span><br><span class="line">             3.通过RePlugin.fetchBinde获取对象去使用</span><br><span class="line"></span><br><span class="line">6.插件中启动前台services？RePlugin2.3.3版本还不支持,后台service正常，未来会提供</span><br><span class="line"></span><br><span class="line">7.插件间activity跳转不支持转场动画</span><br><span class="line"></span><br><span class="line">8.插件间fragment调用，直接通过RePlugin查找会报ClassCastException</span><br><span class="line">原因：不同classloader加载同一份类字节码，还是不同的class，所以他们的实例无法强转</span><br><span class="line">解决：通过compileOnly欺骗编译器，最总都使用宿主工程引入的类</span><br><span class="line"></span><br><span class="line">9.插件间无法去直接对外暴露View</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-概念及技术分析&quot;&gt;&lt;a href=&quot;#1-概念及技术分析&quot; class=&quot;headerlink&quot; title=&quot;1.概念及技术分析&quot;&gt;&lt;/a&gt;1.概念及技术分析&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Moudle library中添加aar</title>
    <link href="http://example.com/2021/03/13/Moudle%20library%E4%B8%AD%E6%B7%BB%E5%8A%A0aar/"/>
    <id>http://example.com/2021/03/13/Moudle library中添加aar/</id>
    <published>2021-03-13T06:29:00.000Z</published>
    <updated>2021-04-19T07:59:44.102Z</updated>
    
    <content type="html"><![CDATA[<p>1.所在模块的build.gradle文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs &apos;libs&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation(name: &apos;lfilepickerlibrary-release&apos;, ext: &apos;aar&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.多个模块引用时，项目的根build.gradle中统一添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123; url &quot;https://jitpack.io&quot; &#125;</span><br><span class="line">        flatDir &#123;</span><br><span class="line">            dirs &apos;../dr_home/libs&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.所在模块的build.gradle文件中&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>ButterKnife在lib中R2方式使用及配置</title>
    <link href="http://example.com/2021/03/08/ButterKnife%E5%9C%A8lib%E4%B8%ADR2%E6%96%B9%E5%BC%8F%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2021/03/08/ButterKnife在lib中R2方式使用及配置/</id>
    <published>2021-03-08T11:02:00.000Z</published>
    <updated>2021-04-19T07:59:44.094Z</updated>
    
    <content type="html"><![CDATA[<p>配置ButterKnife</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.在全局的build.gradle中dependencies配置如下代码</span><br><span class="line"> classpath &apos;com.jakewharton:butterknife-gradle-plugin:*.*.*&apos;</span><br><span class="line"></span><br><span class="line">2.在lib build.gradle头部中添加如下代码：</span><br><span class="line">apply plugin: &apos;com.jakewharton.butterknife&apos;</span><br><span class="line"></span><br><span class="line">3.在lib build.gradle 中添加如下依赖，版本根据自己依赖而定，不是唯一</span><br><span class="line"> compile &apos;com.jakewharton:butterknife:*.*.*&apos;</span><br><span class="line"> annotationProcessor &apos;com.jakewharton:butterknife-compiler:*.*.*&apos;</span><br><span class="line"></span><br><span class="line">4.在lib中是使用ButterKnife ，手动把@bind中的R改成R2，这时候会报红，我们进行rebuild即 可。</span><br></pre></td></tr></table></figure><p>注意点：library中switch-case的使用，在library中是不能使用switch- case 找id的，解决方法就是用if-else代替。</p><p><img src="https://upload-images.jianshu.io/upload_images/6335486-8d2edabe194ba552.png?imageMogr2/auto-orient/strip|imageView2/2/w/378/format/webp" alt="image"></p><p>使用switch-case会报错。<br>使用if-else还有一点注意。如图</p><p><img src="https://upload-images.jianshu.io/upload_images/6335486-6b52caacc75d79ee.png?imageMogr2/auto-orient/strip|imageView2/2/w/425/format/webp" alt="image"></p><p>使用体验：不推荐使用butterknife</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置ButterKnife&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android特殊文字，形式</title>
    <link href="http://example.com/2021/03/08/Android%E7%89%B9%E6%AE%8A%E6%96%87%E5%AD%97%EF%BC%8C%E5%BD%A2%E5%BC%8F/"/>
    <id>http://example.com/2021/03/08/Android特殊文字，形式/</id>
    <published>2021-03-08T07:00:00.000Z</published>
    <updated>2021-04-19T07:59:44.102Z</updated>
    
    <content type="html"><![CDATA[<p>1.同一个字符串不同字体、颜色，SpannableString</p><p>2.自适应字体大小和文本宽度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">android:autoSizeMaxTextSize=&quot;80dp&quot;</span><br><span class="line">android:autoSizeMinTextSize=&quot;2dp&quot;</span><br><span class="line">android:autoSizeTextType=&quot;uniform&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.同一个字符串不同字体、颜色，SpannableString&lt;/p&gt;
&lt;p&gt;2.自适应字体大小和文本宽度&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>String特殊引用类型</title>
    <link href="http://example.com/2021/03/05/String%20%E7%89%B9%E6%AE%8A%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2021/03/05/String 特殊引用类型/</id>
    <published>2021-03-05T03:25:00.000Z</published>
    <updated>2021-04-19T07:59:44.102Z</updated>
    
    <content type="html"><![CDATA[<p>String为值类型还是引用类型？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//值类型</span><br><span class="line">int a = 1;</span><br><span class="line">int b = a;</span><br><span class="line">a = 2;</span><br><span class="line">Console.WriteLine(&quot;a is &#123;0&#125;,b is &#123;1&#125;&quot;, a, b);</span><br><span class="line"></span><br><span class="line">//字符串</span><br><span class="line">string str1 = &quot;ab&quot;;</span><br><span class="line">string str2 = str1;</span><br><span class="line">str1 = &quot;abc&quot;;</span><br><span class="line">Console.WriteLine(&quot;str1 is &#123;0&#125;,str2 is &#123;1&#125;&quot;, str1, str2);</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">//a is 2,b is 1</span><br><span class="line">//str1 is abc,str2 is ab</span><br><span class="line">str2依然是ab,并没有随str1的改变而改变。</span><br><span class="line"></span><br><span class="line">如果string是引用类型，按理Str1和Str指针都指向同一内存地址，如果Str的内容发生改变，Str1应该也会相应变化。</span><br><span class="line"></span><br><span class="line">此例子，看着string更像是值类型。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">引用类型例子：</span><br><span class="line"></span><br><span class="line">String aa = new String(&quot;AA&quot;);这样定义，aa就是一个引用</span><br><span class="line">StringBuilder strb2 = new StringBuilder(&quot;BB&quot;);</span><br></pre></td></tr></table></figure><p>结论：</p><p>String是引用类型，只是编译器对其做了特殊处理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;String为值类型还是引用类型？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android生成aar包时,引用的其它aar无法打包问题</title>
    <link href="http://example.com/2021/03/03/aar%E5%86%8D%E6%89%93%E5%8C%85aar/"/>
    <id>http://example.com/2021/03/03/aar再打包aar/</id>
    <published>2021-03-03T08:50:00.000Z</published>
    <updated>2021-04-15T01:08:11.177Z</updated>
    
    <content type="html"><![CDATA[<p>Add snippet below to your root build script file:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath &apos;com.kezong:fat-aar:1.3.4&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Add snippet below to the build.gradle of your android library:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &apos;com.kezong.fat-aar&apos;</span><br></pre></td></tr></table></figure></p><p>Step 2: Embed dependencies<br>Declare embed for the dependencies you want to merge in build.gradle.</p><p>The usage is similar to implementation, like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: &apos;libs&apos;, include: &apos;*.jar&apos;)</span><br><span class="line">    // java dependency</span><br><span class="line">    embed project(&apos;:lib-java&apos;)</span><br><span class="line">    // aar dependency</span><br><span class="line">    embed project(&apos;:lib-aar&apos;)</span><br><span class="line">    // aar dependency</span><br><span class="line">    embed project(&apos;:lib-aar2&apos;)</span><br><span class="line">    // local full aar dependency, just build in flavor1</span><br><span class="line">    flavor1Embed project(&apos;:lib-aar-local&apos;)</span><br><span class="line">    // local full aar dependency, just build in debug</span><br><span class="line">    debugEmbed (name:&apos;lib-aar-local2&apos;, ext:&apos;aar&apos;)</span><br><span class="line">    // remote jar dependency</span><br><span class="line">    embed &apos;com.google.guava:guava:20.0&apos;</span><br><span class="line">    // remote aar dependency</span><br><span class="line">    embed &apos;com.facebook.fresco:fresco:1.11.0&apos;</span><br><span class="line">    // don&apos;t want to embed in</span><br><span class="line">    implementation(&apos;androidx.appcompat:appcompat:1.2.0&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>地址：<a href="https://github.com/kezong/fat-aar-android" target="_blank" rel="noopener">https://github.com/kezong/fat-aar-android</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Add snippet below to your root build script file:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android共享文件（FileProvider）</title>
    <link href="http://example.com/2021/01/18/Android%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%EF%BC%88FileProvider%EF%BC%89/"/>
    <id>http://example.com/2021/01/18/Android共享文件（FileProvider）/</id>
    <published>2021-01-18T08:04:08.000Z</published>
    <updated>2021-04-15T01:07:13.610Z</updated>
    
    <content type="html"><![CDATA[<p>说明：android 7.0以后需要使用FileProvider配置访问路径</p><p>1.添加 FileProvider 到 AndroidManifest.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    &lt;!-- FileProvider配置访问路径，适配7.0及其以上 --&gt;</span><br><span class="line">    &lt;provider</span><br><span class="line">        android:name=&quot;androidx.core.content.FileProvider&quot;</span><br><span class="line">        android:authorities=&quot;$&#123;applicationId&#125;.provider&quot;</span><br><span class="line">        android:grantUriPermissions=&quot;true&quot;</span><br><span class="line">        android:exported=&quot;false&quot;&gt;</span><br><span class="line">        &lt;meta-data</span><br><span class="line">            android:name=&quot;android.support.FILE_PROVIDER_PATHS&quot;</span><br><span class="line">            android:resource=&quot;@xml/file_path&quot;/&gt;</span><br><span class="line">    &lt;/provider&gt;</span><br><span class="line"></span><br><span class="line">&lt;/application&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--@xml/file_path--&gt;</span><br><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;paths&gt;</span><br><span class="line">        &lt;external-path</span><br><span class="line">            path=&quot;&quot;</span><br><span class="line">            name=&quot;Export&quot;/&gt;</span><br><span class="line">    &lt;/paths&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><p>2.分享<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 文件分享</span><br><span class="line">     */</span><br><span class="line">    protected void fileShare(String filePath) &#123;</span><br><span class="line">        Intent shareIntent = new Intent(Intent.ACTION_SEND);</span><br><span class="line">        shareIntent.setType(&quot;*/*&quot;);</span><br><span class="line">        File file = new File(filePath);</span><br><span class="line">        if (file.exists()) &#123;</span><br><span class="line">            shareIntent.putExtra(Intent.EXTRA_STREAM, getFileUri(this, file));</span><br><span class="line">        &#125;</span><br><span class="line">        shareIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        //设置分享列表的标题，并且每次都显示分享列表</span><br><span class="line">        startActivity(Intent.createChooser(shareIntent, &quot;分享到&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/*根据不同android版本使用不同的方式*/</span><br><span class="line">    private Uri getFileUri(Context context, File file) &#123;</span><br><span class="line">        Uri uri;</span><br><span class="line">        // 低版本直接用 Uri.fromFile</span><br><span class="line">        if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.N) &#123;</span><br><span class="line">            uri = Uri.fromFile(file);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //使用 FileProvider 会在某些 app 下不支持（在使用FileProvider 方式情况下QQ不能支持图片、视频分享，微信不支持视频分享）</span><br><span class="line">            uri = FileProvider.getUriForFile(context, context.getPackageName() + &quot;.provider&quot;, file);</span><br><span class="line">        &#125;</span><br><span class="line">        return uri;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>注意： android:authorities和FileProvider.getUriForFile的content是一致的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;说明：android 7.0以后需要使用FileProvider配置访问路径&lt;/p&gt;
&lt;p&gt;1.添加 FileProvider 到 AndroidManifest.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>ADB 网络调试（可解决逍遥模拟器连接问题）</title>
    <link href="http://example.com/2020/11/11/ADB%20%E7%BD%91%E7%BB%9C%E8%B0%83%E8%AF%95%EF%BC%88%E5%8F%AF%E8%A7%A3%E5%86%B3%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98)/"/>
    <id>http://example.com/2020/11/11/ADB 网络调试（可解决逍遥模拟器连接问题)/</id>
    <published>2020-11-11T02:56:08.000Z</published>
    <updated>2021-04-14T08:41:17.141Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.数据线连接手机到电脑（确保手机打开了USB调试功能，逍遥模拟器需要连接成功一次）</span><br><span class="line"></span><br><span class="line">2.AS Terminal中输入命令 adb tcpip 5555 ,执行成功后可以断开数据线（确保命令行中可以调用到adb,可能需要配置环境变量）</span><br><span class="line"></span><br><span class="line">3.AS Terminal中输入命  adb connect 手机ip:5555 ,  例如我的是：adb connect 172.16.55.24:5555</span><br><span class="line"></span><br><span class="line">关机开启时仍然有效（IP未变的前提下）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Retrofit + okhttp 下载问题</title>
    <link href="http://example.com/2020/08/05/Retrofit%20%20%20okhttp%20%E4%B8%8B%E8%BD%BD%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2020/08/05/Retrofit   okhttp 下载问题/</id>
    <published>2020-08-05T09:45:00.000Z</published>
    <updated>2021-04-07T08:46:03.837Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p> 使用retrofit，添加okhttp拦截器，平常的json返回正常，但下载文件时，文件不准确。</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p> 原先：return response.newBuilder()<br>                    .body(okhttp3.ResponseBody.create(mediaType, content))<br>                    .build();</p><p> 建议：直接返回chain.request()不做其它操作没有问题，不能更改return，后续会出问题。建议不打印response.body()或者暂时取消拦截器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private static  Interceptor MY_LOGGING_INTERCEPTOR = new Interceptor() &#123;</span><br><span class="line">       private String TAG = &quot;MY_LOGGING_INTERCEPTOR&quot;;</span><br><span class="line"></span><br><span class="line">       @Override</span><br><span class="line">       public okhttp3.Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">           Request request = chain.request();</span><br><span class="line">           long t1 = System.nanoTime();</span><br><span class="line">           okhttp3.Response response = chain.proceed(chain.request());</span><br><span class="line">           long t2 = System.nanoTime();</span><br><span class="line">           okhttp3.MediaType mediaType = response.body().contentType();</span><br><span class="line">           Log.d(TAG, &quot;intercept:返回的类型为： &quot; + mediaType);</span><br><span class="line">           String content = response.body().string();</span><br><span class="line">           //printParams(request.body());</span><br><span class="line">           Log.d(TAG, &quot;-----LoggingInterceptor----- :\nrequest url:&quot; + request.url() + &quot;\ntime:&quot; + (t2 - t1) / 1e6d + &quot;\nbody:&quot; + content + &quot;\n&quot;);</span><br><span class="line">           </span><br><span class="line">           //下载文件会有问题</span><br><span class="line">           /*return response.newBuilder()</span><br><span class="line">                   .body(okhttp3.ResponseBody.create(mediaType, content))</span><br><span class="line">                   .build();*/</span><br><span class="line">       &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt; 使用retrofit，添加okhttp拦截器，平常的json返回正常，但下载文件时，文件不准确。&lt;/p&gt;
&lt;h4 id=&quot;解决&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>okhttp 连续两次请求踩坑</title>
    <link href="http://example.com/2020/08/05/okhttp%20%E8%BF%9E%E7%BB%AD%E4%B8%A4%E6%AC%A1%E8%AF%B7%E6%B1%82%E8%B8%A9%E5%9D%91/"/>
    <id>http://example.com/2020/08/05/okhttp 连续两次请求踩坑/</id>
    <published>2020-08-05T09:30:00.000Z</published>
    <updated>2021-04-08T03:17:12.300Z</updated>
    
    <content type="html"><![CDATA[<p>1.现象</p><p>APP只请求了一次，服务器显示有两次请求，回复了两次。结果网络拦截器中显示的服务器返回的response.body()是正确的，而retrofit2实际回调的response.body()是另一个返回结果。</p><p>2.原因<br>okhttp拦截器中使用了两次chain.process()。这就请求了两次。 第二次返回其它的结果可能是因为你已经取过一次body用于打印log，因为body只能取一次，取了之后就置空了。真想提前查看body可以用peekbody方法，也可以使用httpLoggingIntercept这个库打印。</p><p>3.错误示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">private static Interceptor MY_LOGGING_INTERCEPTOR = new Interceptor() &#123;</span><br><span class="line">        private String TAG = &quot;MY_LOGGING_INTERCEPTOR&quot;;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public okhttp3.Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">            Request request = chain.request();</span><br><span class="line">            long t1 = System.nanoTime();</span><br><span class="line">            okhttp3.Response response = chain.proceed(chain.request());</span><br><span class="line">            long t2 = System.nanoTime();</span><br><span class="line">            okhttp3.MediaType mediaType = response.body().contentType();</span><br><span class="line">            Log.d(TAG, &quot;intercept:返回的类型为： &quot; + mediaType);</span><br><span class="line">            String content = response.body().string();</span><br><span class="line">            printParams(request.body());</span><br><span class="line">            Log.d(TAG, &quot;-----LoggingInterceptor----- :\nrequest url:&quot; + request.url() + &quot;\ntime:&quot; + (t2 - t1) / 1e6d + &quot;\nbody:&quot; + content + &quot;\n&quot;);</span><br><span class="line">            return chain.proceed(chain.request());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>4.正确示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">private static Interceptor MY_LOGGING_INTERCEPTOR = new Interceptor() &#123;</span><br><span class="line">        private String TAG = &quot;MY_LOGGING_INTERCEPTOR&quot;;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public okhttp3.Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">            Request request = chain.request();</span><br><span class="line">            long t1 = System.nanoTime();</span><br><span class="line">            okhttp3.Response response = chain.proceed(chain.request());</span><br><span class="line">            long t2 = System.nanoTime();</span><br><span class="line">            okhttp3.MediaType mediaType = response.body().contentType();</span><br><span class="line">            Log.d(TAG, &quot;intercept:返回的类型为： &quot; + mediaType);</span><br><span class="line">            String content = response.body().string();</span><br><span class="line">            printParams(request.body());</span><br><span class="line">            Log.d(TAG, &quot;-----LoggingInterceptor----- :\nrequest url:&quot; + request.url() + &quot;\ntime:&quot; + (t2 - t1) / 1e6d + &quot;\nbody:&quot; + content + &quot;\n&quot;);</span><br><span class="line">            return response.newBuilder()</span><br><span class="line">                    .body(okhttp3.ResponseBody.create(mediaType, content))</span><br><span class="line">                    .build();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.现象&lt;/p&gt;
&lt;p&gt;APP只请求了一次，服务器显示有两次请求，回复了两次。结果网络拦截器中显示的服务器返回的response.body()是正确的，而retrofit2实际回调的response.body()是另一个返回结果。&lt;/p&gt;
&lt;p&gt;2.原因&lt;br&gt;okhttp
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>SVN分支合并</title>
    <link href="http://example.com/2020/04/15/SVN%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/"/>
    <id>http://example.com/2020/04/15/SVN分支合并/</id>
    <published>2020-04-15T09:11:23.000Z</published>
    <updated>2021-04-07T08:47:23.122Z</updated>
    
    <content type="html"><![CDATA[<p>1.SVN想要使用分支标记功能，需要在创建项目的时候创建三个文件夹</p><ul><li>trunk (主干)</li><li>branches (分支，主要用于新功能的开发)</li><li>tags  (标记，主要用于项目开发中的里程碑，比如开发到一定阶段可以单独一个版本作为发布等，它往往代表一个可以固定的完整的版本)</li></ul><p>注意事项：</p><ul><li>开发时为了避免branch和trunk冲突，需要branch不停地和trunk保持同步，即不停的合并trunk到branch。</li><li>正式合并前一定要先进行测试合并</li><li>合并branch到主干，只能进行一次。</li><li>分支主干合并的来源和Git使用相反，需要理解</li></ul><h4 id="合并trunk到branch"><a href="#合并trunk到branch" class="headerlink" title="合并trunk到branch"></a>合并trunk到branch</h4><p>需要当前处于branch仓库目录中。<br>右键-合并-合并一个版本范围-合并的源选择trunk路径（所有版本，指定范围根据需要）-测试合并-合并</p><pre><code>需要经常合并</code></pre><h4 id="合并branch到trunk"><a href="#合并branch到trunk" class="headerlink" title="合并branch到trunk"></a>合并branch到trunk</h4><p>需要当前处于trunk仓库目录。<br>右键-合并-合并一个版本范围-合并的源选择branch路径（所有版本，指定范围根据需要）-测试合并-合并</p><pre><code>此合并只可进行一次</code></pre><h3 id="合并分支步骤"><a href="#合并分支步骤" class="headerlink" title="合并分支步骤"></a>合并分支步骤</h3><p>右键-TortoiseSVN-合并-合并一个版本范围-合并的源（输入你想要获取的代码的仓库地址，合并trunk到branch时选择trunk）-所有版本和指定范围根据需要选择-测试合并，有冲突时解决本地冲突，或删文件-合并</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.SVN想要使用分支标记功能，需要在创建项目的时候创建三个文件夹&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trunk (主干)&lt;/li&gt;
&lt;li&gt;branches (分支，主要用于新功能的开发)&lt;/li&gt;
&lt;li&gt;tags  (标记，主要用于项目开发中的里程碑，比如开发到一定阶段可以单
      
    
    </summary>
    
      <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="代码" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Nginx服务器搭建</title>
    <link href="http://example.com/2019/12/25/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2019/12/25/Nginx服务器编译安装/</id>
    <published>2019-12-25T12:42:08.000Z</published>
    <updated>2021-04-08T03:17:12.298Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure></p><p>2.复制，解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp nginx-1.18.0.tar.gz /usr/local/</span><br><span class="line">tar -xzf nginx-1.18.0.tar.gz</span><br><span class="line">cd nginx-1.18.0</span><br></pre></td></tr></table></figure></p><p>3.安装编译环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure></p><p>4.编译安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#添加用户和组</span><br><span class="line">groupadd www</span><br><span class="line">useradd -g www www</span><br><span class="line">#配置</span><br><span class="line">./configure --prefix=/usr/local/nginx-1.18.0  --user=qgydevops  --group=qgydevops  --with-http_ssl_module --with-http_gzip_static_module --with-http_sub_module --with-http_stub_status_module</span><br><span class="line">（用户组可以不添加，不配置）</span><br><span class="line"></span><br><span class="line">#编译，安装</span><br><span class="line">make &amp;&amp; make instal</span><br></pre></td></tr></table></figure></p><p>5.配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/nginx.sh</span><br><span class="line">文件内写入：</span><br><span class="line">export NGINX_HOME=/usr/local/nginx</span><br><span class="line">export PATH=$NGINX_HOME/sbin:$PATH</span><br><span class="line">保存文件退出执行：</span><br><span class="line">chmod +x /etc/profile.d/nginx.sh</span><br><span class="line">source /etc/profile.d/nginx.sh</span><br></pre></td></tr></table></figure></p><p>6.修改配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure></p><p>7.文件内添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">user    www;</span><br><span class="line">worker_processes  8;  </span><br><span class="line">pid      /usr/local/nginx/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line">error_log /data/wwwlog/error_nginx.log crit;</span><br><span class="line">events &#123;</span><br><span class="line">    use  epoll;</span><br><span class="line">    worker_connections  65535;</span><br><span class="line">    multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=addr:10m;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    client_header_buffer_size    512k;</span><br><span class="line">    client_max_body_size  100m;</span><br><span class="line">    client_body_buffer_size 10m;</span><br><span class="line">    large_client_header_buffers  4 512k;</span><br><span class="line">    sendfile       on;</span><br><span class="line">    tcp_nopush     on;</span><br><span class="line">    tcp_nodelay    on;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    send_timeout        10;</span><br><span class="line">    client_body_timeout  10;</span><br><span class="line">    client_header_timeout  10;</span><br><span class="line">    </span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 128k;</span><br><span class="line">    fastcgi_intercept_errors on;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length 256k;</span><br><span class="line">    gzip_buffers    16  8k;</span><br><span class="line">    gzip_http_version  1.1;</span><br><span class="line">    gzip_comp_level  6;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_vary  on;</span><br><span class="line">    gzip_types</span><br><span class="line">    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml</span><br><span class="line">    text/javascript application/javascript application/x-javascript</span><br><span class="line">    text/x-json application/json application/x-web-app-manifest+json</span><br><span class="line">    text/css text/plain text/x-component</span><br><span class="line">    font/opentype application/x-font-ttf application/vnd.ms-fontobject</span><br><span class="line">    image/x-icon;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;</span><br><span class="line">    open_file_cache max=65535 inactive=20s;</span><br><span class="line">    open_file_cache_valid 30s;</span><br><span class="line">    open_file_cache_min_uses 2;</span><br><span class="line">    open_file_cache_errors on;</span><br><span class="line">    include vhost/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> 8.http{}配置中添加<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen <span class="number">80</span>;</span><br><span class="line">      server_name 你的IP地址;</span><br><span class="line">      root /home/RH;</span><br><span class="line">      index index.html;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></p><p>9.重启服务，配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx –s reload</span><br></pre></td></tr></table></figure></p><p>10.访问nginx，现在你可以通过公网ip (本地可以通过 localhost /或 127.0.0.1 ) 查看nginx 服务返回的信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i localhost</span><br></pre></td></tr></table></figure></p><p>11.修改文件夹权限，否则无法访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 RH</span><br></pre></td></tr></table></figure></p><p>12.。浏览器访问 http://你的IP地址</p><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><p>13.在系统服务目录里创建nginx.service文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure></p><p>14.写入内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#服务的说明</span><br><span class="line">[Unit]</span><br><span class="line">#描述服务</span><br><span class="line">Description=nginx</span><br><span class="line">#描述服务类别</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">#服务运行参数的设置  </span><br><span class="line">[Service]</span><br><span class="line">#forking是后台运行的形式</span><br><span class="line">Type=forking</span><br><span class="line">#服务的具体运行命令</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">#重启命令</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">#停止命令</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line">#表示给服务分配独立的临时空间</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">#运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>15.设置开机自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure></p><p>16.查看nginx状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure></p><p>17.重启nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 nginx</span><br><span class="line">ps aux | grep nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></p><p>18.查看服务状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure></p><h4 id="备案访问问题："><a href="#备案访问问题：" class="headerlink" title="备案访问问题："></a>备案访问问题：</h4><p>1.域名需要实名认证、</p><p>2.购买的国内云服务器。默认访问80端口，服务器需要备案，否则无法访问；访问非80端口不需要备案。</p><p>3.购买的国外云服务器。不需要备案。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.下载&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>搭建FTP服务器</title>
    <link href="http://example.com/2019/12/25/%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/2019/12/25/搭建FTP服务器/</id>
    <published>2019-12-25T11:41:24.000Z</published>
    <updated>2021-04-09T09:00:22.653Z</updated>
    
    <content type="html"><![CDATA[<p>1.安装<br>[root@Sungeek ~]# yum -y install vsftpd</p><p>1.编辑配置<br>[root@Sungeek ~]# cd /etc/vsftpd<br>[root@Sungeek ~]# vim vsftpd.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//本地用户访问</span><br><span class="line">local_enable=YES</span><br><span class="line">#本地用户访问目录</span><br><span class="line">local_root=/home/FTP/</span><br><span class="line">#只允许在主目录下活动</span><br><span class="line">chroot_local_user=YES</span><br><span class="line"></span><br><span class="line">#匿名用户不能访问</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#匿名用户访问目录</span><br><span class="line">anon_root=/home/RH/JasonRH.github.io/index.html</span><br></pre></td></tr></table></figure><p>3.<br>添加FTP用户命令：useradd XXX<br>设置FTP用户密码：passwd XXX<br>设置用户目录访问权限：<br>[root@Sungeek vsftpd]# chown -R ftpuser /home/ftp</p><p>3、设置vsftpd服务开机启动<br>[root@Sungeek ~]# systemctl enable vsftpd.service</p><p>//设置开机自启动<br>systemctl enable vsftpd.service<br>//启动ftp服务<br>systemctl start vsftpd.service<br>//暂停ftp服务<br>systemctl status vsftpd.service<br>//查看ftp服务端口<br>netstat -antup | grep ftp<br>重启服务<br>service vsftpd restart</p><h3 id="开启被动模式"><a href="#开启被动模式" class="headerlink" title="开启被动模式"></a>开启被动模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pasv_enable=YES # 是否允许数据传输时使用PASV模式（默认值为 YES）</span><br><span class="line">pasv_min_port=port port_number # PASV 模式下，数据传输使用的端口下界（0 表示任意。默认值为 0）把端口范围设在比较高的一段范围内，比如 50000-60000，将有助于安全性的提高.</span><br><span class="line">pasv_max_port=port_number # PASV 模式下，数据传输使用的端口上界（0 表示任意。默认值为 0）</span><br><span class="line">pasv_promiscuous=NO # 是否屏蔽对 PASV 进行安全检查，默认值为 NO（当有安全隧道时可禁用）</span><br><span class="line">pasv_address # PASV 模式中服务器传回的 ip 地址。默认值为 none，即地址是从呼入的连接套接字中获取。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.安装&lt;br&gt;[root@Sungeek ~]# yum -y install vsftpd&lt;/p&gt;
&lt;p&gt;1.编辑配置&lt;br&gt;[root@Sungeek ~]# cd /etc/vsftpd&lt;br&gt;[root@Sungeek ~]# vim vsftpd.conf&lt;/p
      
    
    </summary>
    
      <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="服务器" scheme="http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio新建Module异常</title>
    <link href="http://example.com/2019/12/10/Android%20Studio%E6%96%B0%E5%BB%BAModule%E5%BC%82%E5%B8%B8/"/>
    <id>http://example.com/2019/12/10/Android Studio新建Module异常/</id>
    <published>2019-12-10T01:40:23.000Z</published>
    <updated>2021-04-06T07:39:45.608Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>新建module后，上面显示 Gradle sync 同步失败，build窗口一直卡在同步中，卸载重装 更换sdk，删除.gradle和 android配置文件夹都没有用</p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>由于开启了渐变同步导致，到设置界面：   File → Settings → Experimental → Gradle 把Only sync the active variant 的勾去掉即可</p><p><img src="https://img-blog.csdnimg.cn/20191210093212747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dQUjEzMDA1NjU1OTg5,size_16,color_FFFFFF,t_70" alt="取消打勾"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h4&gt;&lt;p&gt;新建module后，上面显示 Gradle sync 同步失败，build窗口一直卡在同步中，卸载重装 更换sdk，删除.gradl
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android Studio" scheme="http://example.com/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 配置签名和编译自命名</title>
    <link href="http://example.com/2019/09/07/Android%20Studio%20%E9%85%8D%E7%BD%AE%E7%AD%BE%E5%90%8D%E5%92%8C%E7%BC%96%E8%AF%91%E8%87%AA%E5%91%BD%E5%90%8D/"/>
    <id>http://example.com/2019/09/07/Android Studio 配置签名和编译自命名/</id>
    <published>2019-09-07T01:16:00.000Z</published>
    <updated>2021-04-09T08:49:19.925Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line"></span><br><span class="line">def releaseTime() &#123;</span><br><span class="line">    return new Date().format(&quot;yyMMdd&quot;, TimeZone.getTimeZone(&quot;UTC&quot;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signingConfigs &#123;</span><br><span class="line">        myConfig &#123;</span><br><span class="line">            storeFile file(RELEASE_STORE_FILE)</span><br><span class="line">            storePassword RELEASE_KEY_PASSWORD</span><br><span class="line">            keyAlias RELEASE_KEY_ALIAS</span><br><span class="line">            keyPassword RELEASE_STORE_PASSWORD</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            signingConfig signingConfigs.myConfig</span><br><span class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</span><br><span class="line">            //混淆</span><br><span class="line">            minifyEnabled true</span><br><span class="line">            //Zipalign优化</span><br><span class="line">            zipAlignEnabled true</span><br><span class="line">            // 移除无用的resource文件</span><br><span class="line">            shrinkResources true</span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;</span><br><span class="line">            signingConfig signingConfigs.myConfig</span><br><span class="line">            applicationIdSuffix &apos;.debug&apos;</span><br><span class="line">            versionNameSuffix &apos;debug&apos;</span><br><span class="line">            //混淆</span><br><span class="line">            minifyEnabled false</span><br><span class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</span><br><span class="line">            //Zipalign优化</span><br><span class="line">            zipAlignEnabled false</span><br><span class="line">            // 移除无用的resource文件</span><br><span class="line">            shrinkResources false</span><br><span class="line">        &#125;</span><br><span class="line">        android.applicationVariants.all &#123; variant -&gt;</span><br><span class="line">            variant.outputs.all &#123;</span><br><span class="line">                def enName = &apos;阅读&apos;</span><br><span class="line">                outputFileName = &quot;$&#123;enName&#125;_V$&#123;defaultConfig.versionName&#125;_$&#123;releaseTime()&#125;$&#123;name&#125;.apk&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">#注意：signingConfigs 要放在 buildTypes 前面</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#gradle.properties文件中添加jks信息</span><br><span class="line"></span><br><span class="line">RELEASE_STORE_FILE=../release.jks</span><br><span class="line">RELEASE_STORE_PASSWORD=******</span><br><span class="line">RELEASE_KEY_ALIAS=**</span><br><span class="line">RELEASE_KEY_PASSWORD=******</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#根据RELEASE_STORE_FILE 配置的路径，将release.jks 文件放到项目根目录下</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Git乱码</title>
    <link href="http://example.com/2019/08/06/Git%E4%B9%B1%E7%A0%81/"/>
    <id>http://example.com/2019/08/06/Git乱码/</id>
    <published>2019-08-06T01:40:23.000Z</published>
    <updated>2021-04-06T07:39:45.609Z</updated>
    
    <content type="html"><![CDATA[<p>解决git bash 终端显示中文乱码<br>要注意的是，这样设置后，你的git bash终端也要设置成中文和utf-8编码。才能正确显示中文，例如对比如下：</p><p>在git bash的界面中右击空白处，弹出菜单，选择选项-&gt;文本-&gt;本地Locale，设置为zh_CN，而旁边的字符集选框选为UTF-8。</p><p>英文显示则是：<br>Options-&gt;Text-&gt;Locale改为zh_CN，Character set改为UTF-8</p><p>通过修改配置文件来解决中文乱码<br>如果你的git bash终端没有菜单选项显示，还可以通过直接修改配置文件的方式来解决中文乱码问题。</p><p>进入git的安装目录</p><p>编辑etc\gitconfig文件，也有些windows系统是存放在C:\Users\Administrator.gitconfig路径或安装盘符:\Git\mingw64\etc\gitconfig，在文件末尾增加以下内容：<br>[gui]<br>    encoding = utf-8  </p><pre><code># 代码库统一使用utf-8  </code></pre><p>[i18n]<br>    commitencoding = utf-8  </p><pre><code># log编码  </code></pre><p>[svn]<br>    pathnameencoding = utf-8  </p><pre><code># 支持中文路径  </code></pre><p>[core]<br>    quotepath = false </p><pre><code># status引用路径不再是八进制（反过来说就是允许显示中文了）</code></pre><hr><p>版权声明：本文为CSDN博主「铁乐与猫」的原创文章，遵循CC 4.0 by-sa版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/u012145252/article/details/81775362" target="_blank" rel="noopener">https://blog.csdn.net/u012145252/article/details/81775362</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;解决git bash 终端显示中文乱码&lt;br&gt;要注意的是，这样设置后，你的git bash终端也要设置成中文和utf-8编码。才能正确显示中文，例如对比如下：&lt;/p&gt;
&lt;p&gt;在git bash的界面中右击空白处，弹出菜单，选择选项-&amp;gt;文本-&amp;gt;本地Locale，设
      
    
    </summary>
    
      <category term="其他" scheme="http://example.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Android和PHP，字符压缩和编码</title>
    <link href="http://example.com/2019/07/11/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81/"/>
    <id>http://example.com/2019/07/11/字符串压缩编码/</id>
    <published>2019-07-11T05:11:23.000Z</published>
    <updated>2021-03-29T03:01:27.458Z</updated>
    
    <content type="html"><![CDATA[<p>base64_encode(gzdeflate(源字符串))</p><p>Android字符压缩<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] deflater(String data) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//ByteArrayInputStream inputStream = new ByteArrayInputStream(data.getBytes());</span></span><br><span class="line">        <span class="comment">//内存输出流</span></span><br><span class="line">        ByteArrayOutputStream outputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 要使用no_wrap的Deflater，php才能解压，9是最高的压缩级别，可以设置为1-9的级别，1速度最快</span></span><br><span class="line">        DeflaterOutputStream deflaterOut = <span class="keyword">new</span> DeflaterOutputStream(outputStream, <span class="keyword">new</span> Deflater(<span class="number">9</span>, <span class="keyword">true</span>));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            deflaterOut.write(data.getBytes());</span><br><span class="line">            <span class="comment">//一定要finish否则长度为0</span></span><br><span class="line">            deflaterOut.finish();</span><br><span class="line">            outputStream.flush();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//String str = outputStream.toString();</span></span><br><span class="line">            <span class="keyword">byte</span>[] byteArray = outputStream.toByteArray();</span><br><span class="line">            <span class="keyword">return</span> byteArray;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//inputStream.close();</span></span><br><span class="line">                deflaterOut.close();</span><br><span class="line">                outputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>Android Base64编码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">enncode</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes;</span><br><span class="line">    String encodeString = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        bytes = s.getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line">        encodeString = Base64.encodeToString(bytes, Base64.NO_WRAP)</span><br><span class="line">        <span class="comment">//java中使用（需要jdk8）</span></span><br><span class="line">        <span class="comment">//Base64.getEncoder().encodeToString("some string".getBytes("utf-8"));</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> encodeString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>PHP 解码与解压缩</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$Code = <span class="string">'这里填写要解密的编码'</span>; <span class="comment">// base64编码 </span></span><br><span class="line">$Temp = base64_decode($Code); </span><br><span class="line">$postStr = gzinflate($Temp);</span><br></pre></td></tr></table></figure><p>参考网址：<a href="https://blog.csdn.net/hdgcx/article/details/53916837" target="_blank" rel="noopener">https://blog.csdn.net/hdgcx/article/details/53916837</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;base64_encode(gzdeflate(源字符串))&lt;/p&gt;
&lt;p&gt;Android字符压缩&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="数据压缩" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>json数据</title>
    <link href="http://example.com/2019/07/10/json%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2019/07/10/json数据/</id>
    <published>2019-07-10T05:10:05.000Z</published>
    <updated>2021-03-29T03:01:27.444Z</updated>
    
    <content type="html"><![CDATA[<p>1.出现转译字符    </p><pre><code>String s = new Gson().toJson(encodedText);出现转译字符原因：Gson会把html标签，转换为Unicode转义字符。正确的使用方法是:Gson gson = new GsonBuilder().disableHtmlEscaping().create();</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.出现转译字符    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;String s = new Gson().toJson(encodedText);出现转译字符

原因：Gson会把html标签，转换为Unicode转义字符。

正确的使用方法是:Gson gson = new G
      
    
    </summary>
    
    
      <category term="json" scheme="http://example.com/tags/json/"/>
    
  </entry>
  
</feed>
